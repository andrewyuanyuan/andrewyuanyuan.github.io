{"title":"每日一题：LC456 132模式","date":"2021-03-23T16:00:00.000Z","date_formatted":{"ll":"Mar 24, 2021","L":"03/24/2021","MM-DD":"03-24"},"link":"2021/03/24/刷题日记/每日一题：LC456 132模式","tags":["LeetCode"],"categories":["LeetCode"],"updated":"2021-03-24T06:26:36.291Z","content":"<h1 id=\"每日一题：lc456-132模式\">每日一题：LC456 132模式<a title=\"#每日一题：lc456-132模式\" href=\"#每日一题：lc456-132模式\"></a></h1>\n<p><a href=\"https://leetcode-cn.com/problems/132-pattern/\" target=\"_blank\">456. 132 模式</a>：<strong>Medium</strong></p>\n<p>本文内容来源：</p>\n<ol>\n<li>\n<p><a href=\"https://leetcode-cn.com/problems/132-pattern/solution/132mo-shi-by-leetcode-solution-ye89/\" target=\"_blank\">官方题解</a></p>\n</li>\n<li>\n<p>来自CHerrY的<a href=\"https://leetcode-cn.com/problems/132-pattern/solution/java-dan-diao-zhan-fang-fa-zhu-xing-zhu-rcmtr/\" target=\"_blank\">解答</a></p>\n</li>\n</ol>\n<h2 id=\"方法1：使用暴力维护3\">方法1：使用暴力维护3<a title=\"#方法1：使用暴力维护3\" href=\"#方法1：使用暴力维护3\"></a></h2>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> find132pattern = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> numsi = nums[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> j=<span class=\"number\">1</span>; j&lt;nums.length; j++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> k=nums.length; k&gt;j; k--)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(numsi&lt;nums[k]&amp;&amp;nums[k]&lt;nums[j])\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        numsi = <span class=\"built_in\">Math</span>.min(numsi, nums[j]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h2 id=\"方法2：单调栈解法\">方法2：单调栈解法<a title=\"#方法2：单调栈解法\" href=\"#方法2：单调栈解法\"></a></h2>\n<ul>\n<li><code>min[i]</code>：对于下标<code>i</code>，从<code>0</code>到<code>i</code>最小的数是多少。</li>\n<li>从后往前遍历原数组，栈维护的是大于<code>min[i]</code>且小于<code>nums[i]</code>的元素。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> find132pattern = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> len = nums.length;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> min = [];</span><br><span class=\"line\">    min[<span class=\"number\">0</span>] = nums[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">1</span>; i&lt;len; i++)&#123;</span><br><span class=\"line\">        min[i] = <span class=\"built_in\">Math</span>.min(min[i-<span class=\"number\">1</span>], nums[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"keyword\">let</span> stk = [];</span><br><span class=\"line\">    <span class=\"comment\">//从后往前遍历，stack中的数组表示的是从位置i到n中，大于min[i]且小于nums[i]的数</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=len-<span class=\"number\">1</span>; i&gt;=<span class=\"number\">0</span>; i--)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(nums[i]&gt;min[i])&#123;</span><br><span class=\"line\">            <span class=\"comment\">//如果栈中的数字比min[i]还小或相同，那么说明不可能是ak，就弹出来</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span>(stk.length!=<span class=\"number\">0</span> &amp;&amp; min[i]&gt;=stk[stk.length-<span class=\"number\">1</span>]) stk.pop();</span><br><span class=\"line\">            <span class=\"comment\">//检查一下栈顶元素是不是满足 ai&lt;stack.peek()&lt;aj，如果满足了就说明找到了</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(stk.length!=<span class=\"number\">0</span> &amp;&amp; nums[i]&gt;stk[stk.length-<span class=\"number\">1</span>]) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            <span class=\"comment\">//不管怎么样都要push进来当前的数，因为当前的数满足了大于min[i]</span></span><br><span class=\"line\">            stk.push(nums[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<hr>\n<p>Java版本（官方题解）：</p>\n<h3 id=\"思路图：\">思路图：<a title=\"#思路图：\" href=\"#思路图：\"></a></h3>\n<p><img src=\"http://ww1.sinaimg.cn/large/006SqI8Ply1gouz6ul34cj31h30aawgo.jpg\" alt=\"IMG_2282(20210324-142031).PNG\" class=\"φbs\"></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Solution</span> </span>&#123;</span><br><span class=\"line\">    public boolean <span class=\"function\"><span class=\"title\">find132pattern</span>(<span class=\"params\">int[] nums</span>)</span> &#123;</span><br><span class=\"line\">        int n = nums.length;</span><br><span class=\"line\">        Deque&lt;Integer&gt; candidateK = <span class=\"keyword\">new</span> LinkedList&lt;&gt;();</span><br><span class=\"line\">        candidateK.push(nums[n-<span class=\"number\">1</span>]);</span><br><span class=\"line\">        <span class=\"comment\">//用max_k记录所有可以真正作为2的元素的最大值</span></span><br><span class=\"line\">        int maxK = Integer.MIN_VALUE;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(int i=n-<span class=\"number\">2</span>; i&gt;=<span class=\"number\">0</span>; i++)&#123;</span><br><span class=\"line\">            <span class=\"comment\">//首先我们判断a[i]是否可以作为1。如果a[i]&lt;max_k，那么它就可以作为1</span></span><br><span class=\"line\">            <span class=\"comment\">//我们就找到了一组满足132模式的三元组</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(nums[i]&lt;maxK)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">//随后我们判断a[i]是否可以作为3，以此找出那些可以真正作为2的元素。</span></span><br><span class=\"line\">            <span class=\"comment\">//我们将a[i]不断地与栈顶元素相比较，如果a[i]比较大，那么栈顶元素可以很真正作为2，将其弹出并更\t\t\t//新max_k</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span>(!candidateK.isEmpty()&amp;&amp;nums[i]&gt;candidateK.peek())&#123;</span><br><span class=\"line\">                maxK = candidateK.pop();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">//最后我们将a[i]作为2的候选元素放入单调栈中。</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(nums[i]&gt;maxK)&#123;</span><br><span class=\"line\">                candidateK.push(nums[i]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>时间复杂度：<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"5.646ex\" height=\"2.843ex\" style=\"vertical-align: -0.838ex;\" viewbox=\"0 -863.1 2431 1223.9\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" aria-labelledby=\"MathJax-SVG-1-Title\">\n<title id=\"MathJax-SVG-1-Title\">O(N)</title>\n<defs aria-hidden=\"true\">\n<path stroke-width=\"1\" id=\"E1-MJMATHI-4F\" d=\"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-4E\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"/>\n</defs>\n<g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\" aria-hidden=\"true\">\n <use xlink:href=\"#E1-MJMATHI-4F\" x=\"0\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMAIN-28\" x=\"763\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-4E\" x=\"1153\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMAIN-29\" x=\"2041\" y=\"0\"/>\n</g>\n</svg></li>\n<li>空间复杂度：<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"5.646ex\" height=\"2.843ex\" style=\"vertical-align: -0.838ex;\" viewbox=\"0 -863.1 2431 1223.9\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" aria-labelledby=\"MathJax-SVG-1-Title\">\n<title id=\"MathJax-SVG-1-Title\">O(N)</title>\n<defs aria-hidden=\"true\">\n<path stroke-width=\"1\" id=\"E1-MJMATHI-4F\" d=\"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-4E\" d=\"M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"/>\n</defs>\n<g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\" aria-hidden=\"true\">\n <use xlink:href=\"#E1-MJMATHI-4F\" x=\"0\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMAIN-28\" x=\"763\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-4E\" x=\"1153\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMAIN-29\" x=\"2041\" y=\"0\"/>\n</g>\n</svg></li>\n</ul>\n","prev":{"title":"8.4 类","link":"2021/03/25/JavaScript/8-4-类"},"next":{"title":"JavaScript中的位操作符","link":"2021/03/23/JavaScript/JavaScript中的位操作符"},"plink":"http://example.com/2021/03/24/刷题日记/每日一题：LC456 132模式/","toc":[{"id":"每日一题：lc456-132模式","title":"每日一题：LC456 132模式","index":"1","children":[{"id":"方法1：使用暴力维护3","title":"方法1：使用暴力维护3","index":"1.1"},{"id":"方法2：单调栈解法","title":"方法2：单调栈解法","index":"1.2","children":[{"id":"思路图：","title":"思路图：","index":"1.2.1"}]}]}]}