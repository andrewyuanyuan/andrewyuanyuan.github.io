{"title":"每日一题：LC368 最大整除子集","date":"2021-04-22T16:00:00.000Z","date_formatted":{"ll":"Apr 23, 2021","L":"04/23/2021","MM-DD":"04-23"},"link":"2021/04/23/刷题日记/每日一题：LC368 最大整除子集","tags":["LeetCode"],"categories":["LeetCode"],"updated":"2021-04-25T17:06:10.407Z","content":"<h1 id=\"每日一题：lc368-最大整除子集\">每日一题：LC368 最大整除子集<a title=\"#每日一题：lc368-最大整除子集\" href=\"#每日一题：lc368-最大整除子集\"></a></h1>\n<p><a href=\"https://leetcode-cn.com/problems/largest-divisible-subset/\" target=\"_blank\">368. 最大整除子集</a>-Medium</p>\n<p>相关：</p>\n<p><a href=\"https://leetcode-cn.com/problems/longest-increasing-subsequence\" target=\"_blank\">300. 最长递增子序列</a>（动态规划经典题）- Medium</p>\n<p>本文内容参考：</p>\n<ol>\n<li>Leetcode<a href=\"https://leetcode-cn.com/problems/largest-divisible-subset/solution/zui-da-zheng-chu-zi-ji-by-leetcode-solut-t4pz/\" target=\"_blank\">官方题解</a></li>\n</ol>\n<hr>\n<h1 id=\"动态规划\">动态规划<a title=\"#动态规划\" href=\"#动态规划\"></a></h1>\n<p>题目只要求我们得到多个目标子集中的一个，根据求解动态规划问题的经验，我们需要<strong>将子集的大小定义为状态</strong>，然后根据结果<strong>倒推</strong>到一个目标子集。与<a href=\"https://leetcode-cn.com/problems/longest-increasing-subsequence\" target=\"_blank\">300. 最长递增子序列</a>有相似之处。</p>\n<ol>\n<li><strong>状态定义：</strong><code>dp[i]</code>表示在输入数组<code>nums</code>升序排列的前提下，以<code>nums[i]</code>为最大整数的<strong>整除子集</strong>的大小。（在这种定义下<code>nums[i]</code>必须被选择）。</li>\n<li>**状态转移方程：**枚举<code>j=0...i-1</code>的所有整数<code>nums[j]</code>，如果<code>nums[j]</code>能整除<code>nums[i]</code>，说明<code>nums[i]</code>可以扩充在以<code>nums[j]</code>为最大整数的整除子集里成为一个更大的整除子集。</li>\n<li>**初始化：**由于<code>nums[i]</code>必须被选择，因此对于任意<code>i=0...n-1</code>，初始的时候<code>dp[i]=1</code>，这里<code>n</code>是输入数组的长度。</li>\n<li>**输出：**由于最大整除子集不一定包括<code>nums</code>中最大的整数，所以我们需要枚举所有的<code>dp[i]</code>，选出最大整除子集大小<code>maxSize</code>，以及该最大子集中的最大整除<code>maxVal</code>。</li>\n</ol>\n<p>完成<code>dp</code>的构造并获得<code>maxSize</code>与<code>maxVal</code>后，倒推获得一个目标子集。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> largestDivisibleSubset = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(nums.length&lt;=<span class=\"number\">1</span>)  <span class=\"keyword\">return</span> nums;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> sortedNums = nums.sort(<span class=\"function\">(<span class=\"params\">a,b</span>)=&gt;</span>a-b);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> len = nums.length;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">let</span> dp = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(len).fill(<span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> maxSize = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> index = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">1</span>; i&lt;len; i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> j=<span class=\"number\">0</span>; j&lt;i; j++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(sortedNums[i]%sortedNums[j]==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                dp[i] = <span class=\"built_in\">Math</span>.max(dp[i],dp[j]+<span class=\"number\">1</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(dp[i]&gt;maxSize)&#123;</span><br><span class=\"line\">            maxSize = dp[i];</span><br><span class=\"line\">            index = i;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">let</span> ans = [];</span><br><span class=\"line\">    <span class=\"keyword\">let</span> mark = maxSize-<span class=\"number\">1</span>;</span><br><span class=\"line\">    ans.push(sortedNums[index]);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(maxSize == <span class=\"number\">1</span>)    <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=index-<span class=\"number\">1</span>; i&gt;=<span class=\"number\">0</span>; i--)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(sortedNums[index]%sortedNums[i]==<span class=\"number\">0</span>&amp;&amp;dp[i]==mark)&#123;</span><br><span class=\"line\">            index=i;</span><br><span class=\"line\">            ans.push(sortedNums[i]);</span><br><span class=\"line\">            mark--;</span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>时间复杂度：<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"6.032ex\" height=\"3.176ex\" style=\"vertical-align: -0.838ex;\" viewbox=\"0 -1006.6 2596.9 1367.4\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" aria-labelledby=\"MathJax-SVG-1-Title\">\n<title id=\"MathJax-SVG-1-Title\">O(n^2)</title>\n<defs aria-hidden=\"true\">\n<path stroke-width=\"1\" id=\"E1-MJMATHI-4F\" d=\"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-6E\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"/>\n</defs>\n<g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\" aria-hidden=\"true\">\n <use xlink:href=\"#E1-MJMATHI-4F\" x=\"0\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMAIN-28\" x=\"763\" y=\"0\"/>\n<g transform=\"translate(1153,0)\">\n <use xlink:href=\"#E1-MJMATHI-6E\" x=\"0\" y=\"0\"/>\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMAIN-32\" x=\"849\" y=\"583\"/>\n</g>\n <use xlink:href=\"#E1-MJMAIN-29\" x=\"2207\" y=\"0\"/>\n</g>\n</svg>，其中<code>n</code>为输入数组的长度。对数组<code>nums</code>排序的时间复杂度为<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"9.309ex\" height=\"2.843ex\" style=\"vertical-align: -0.838ex;\" viewbox=\"0 -863.1 4008 1223.9\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" aria-labelledby=\"MathJax-SVG-1-Title\">\n<title id=\"MathJax-SVG-1-Title\">O(nlogn)</title>\n<defs aria-hidden=\"true\">\n<path stroke-width=\"1\" id=\"E1-MJMATHI-4F\" d=\"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-6E\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-6C\" d=\"M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-6F\" d=\"M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-67\" d=\"M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"/>\n</defs>\n<g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\" aria-hidden=\"true\">\n <use xlink:href=\"#E1-MJMATHI-4F\" x=\"0\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMAIN-28\" x=\"763\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-6E\" x=\"1153\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-6C\" x=\"1753\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-6F\" x=\"2052\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-67\" x=\"2537\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-6E\" x=\"3018\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMAIN-29\" x=\"3618\" y=\"0\"/>\n</g>\n</svg>，计算数组<code>dp</code>元素的时间复杂度为<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"6.032ex\" height=\"3.176ex\" style=\"vertical-align: -0.838ex;\" viewbox=\"0 -1006.6 2596.9 1367.4\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" aria-labelledby=\"MathJax-SVG-1-Title\">\n<title id=\"MathJax-SVG-1-Title\">O(n^2)</title>\n<defs aria-hidden=\"true\">\n<path stroke-width=\"1\" id=\"E1-MJMATHI-4F\" d=\"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-6E\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-32\" d=\"M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"/>\n</defs>\n<g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\" aria-hidden=\"true\">\n <use xlink:href=\"#E1-MJMATHI-4F\" x=\"0\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMAIN-28\" x=\"763\" y=\"0\"/>\n<g transform=\"translate(1153,0)\">\n <use xlink:href=\"#E1-MJMATHI-6E\" x=\"0\" y=\"0\"/>\n <use transform=\"scale(0.707)\" xlink:href=\"#E1-MJMAIN-32\" x=\"849\" y=\"583\"/>\n</g>\n <use xlink:href=\"#E1-MJMAIN-29\" x=\"2207\" y=\"0\"/>\n</g>\n</svg>，倒序遍历得到一个目标子集，复杂度为<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"4.977ex\" height=\"2.843ex\" style=\"vertical-align: -0.838ex;\" viewbox=\"0 -863.1 2143 1223.9\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" aria-labelledby=\"MathJax-SVG-1-Title\">\n<title id=\"MathJax-SVG-1-Title\">O(n)</title>\n<defs aria-hidden=\"true\">\n<path stroke-width=\"1\" id=\"E1-MJMATHI-4F\" d=\"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-6E\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"/>\n</defs>\n<g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\" aria-hidden=\"true\">\n <use xlink:href=\"#E1-MJMATHI-4F\" x=\"0\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMAIN-28\" x=\"763\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-6E\" x=\"1153\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMAIN-29\" x=\"1753\" y=\"0\"/>\n</g>\n</svg>。</li>\n<li>空间复杂度：<svg xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"4.977ex\" height=\"2.843ex\" style=\"vertical-align: -0.838ex;\" viewbox=\"0 -863.1 2143 1223.9\" role=\"img\" focusable=\"false\" xmlns=\"http://www.w3.org/2000/svg\" aria-labelledby=\"MathJax-SVG-1-Title\">\n<title id=\"MathJax-SVG-1-Title\">O(n)</title>\n<defs aria-hidden=\"true\">\n<path stroke-width=\"1\" id=\"E1-MJMATHI-4F\" d=\"M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-28\" d=\"M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMATHI-6E\" d=\"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z\"/>\n<path stroke-width=\"1\" id=\"E1-MJMAIN-29\" d=\"M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z\"/>\n</defs>\n<g stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" transform=\"matrix(1 0 0 -1 0 0)\" aria-hidden=\"true\">\n <use xlink:href=\"#E1-MJMATHI-4F\" x=\"0\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMAIN-28\" x=\"763\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMATHI-6E\" x=\"1153\" y=\"0\"/>\n <use xlink:href=\"#E1-MJMAIN-29\" x=\"1753\" y=\"0\"/>\n</g>\n</svg>，n为输入数组的长度，需要创建长度为<code>n</code>的数组<code>dp</code>。</li>\n</ul>\n<h2 id=\"思路过程\">思路过程<a title=\"#思路过程\" href=\"#思路过程\"></a></h2>\n<p><img src=\"https://cdn.jsdelivr.net/gh/andrewyuanyuan/blog-image/img/17C0A1CA3353FFA0414331D36A922214.png\" alt=\"pic1\" class=\"φbs\"></p>\n","prev":{"title":"每日一题：LC377 组合总和Ⅳ","link":"2021/04/24/刷题日记/每日一题：LC377 组合总和Ⅳ"},"next":{"title":"每日一题：LC220 存在重复元素Ⅲ","link":"2021/04/17/刷题日记/每日一题：LC220 存在重复元素Ⅲ"},"plink":"http://example.com/2021/04/23/刷题日记/每日一题：LC368 最大整除子集/","toc":[{"id":"每日一题：lc368-最大整除子集","title":"每日一题：LC368 最大整除子集","index":"1"},{"id":"动态规划","title":"动态规划","index":"2","children":[{"id":"思路过程","title":"思路过程","index":"2.1"}]}]}