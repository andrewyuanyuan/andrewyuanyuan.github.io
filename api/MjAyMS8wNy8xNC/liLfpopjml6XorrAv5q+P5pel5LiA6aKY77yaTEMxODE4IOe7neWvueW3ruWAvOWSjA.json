{"title":"每日一题：LC1818 绝对差值和","date":"2021-07-13T16:00:00.000Z","date_formatted":{"ll":"Jul 14, 2021","L":"07/14/2021","MM-DD":"07-14"},"link":"2021/07/14/刷题日记/每日一题：LC1818 绝对差值和","tags":["LeetCode","二分查找"],"categories":["LeetCode"],"updated":"2021-07-14T07:21:13.551Z","content":"<h1 id=\"每日一题：lc1818-绝对差值和\">每日一题：LC1818 绝对差值和<a title=\"#每日一题：lc1818-绝对差值和\" href=\"#每日一题：lc1818-绝对差值和\"></a></h1>\n<p><a href=\"https://leetcode-cn.com/problems/minimum-absolute-sum-difference/\" target=\"_blank\">1818. 绝对差值和</a> - Medium</p>\n<p>本文内容来源：</p>\n<ol>\n<li><a href=\"https://leetcode-cn.com/problems/capacity-to-ship-packages-within-d-days/solution/zai-d-tian-nei-song-da-bao-guo-de-neng-l-ntml/\" target=\"_blank\">LeetCode</a>官方解答</li>\n</ol>\n<hr>\n<p>本体在使用JavaScript编写的时候有几个坑点，首先来看一下具体代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> minAbsoluteSumDiff = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">nums1, nums2</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> sum = <span class=\"number\">0</span>, max = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> sortedNums1 = [...nums1];</span><br><span class=\"line\">    sortedNums1.sort(<span class=\"function\">(<span class=\"params\">a,b</span>)=&gt;</span>a-b);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i=<span class=\"number\">0</span>; i&lt;nums1.length; i++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> num1 = nums1[i], num2 = nums2[i];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(num1==num2)  <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> abs = <span class=\"built_in\">Math</span>.abs(num1-num2);</span><br><span class=\"line\">        sum += abs;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> l = <span class=\"number\">0</span>, r = sortedNums1.length;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (l &lt; r) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">let</span> mid = l+r&gt;&gt;<span class=\"number\">1</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (sortedNums1[mid] &gt;= num2) r = mid;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> l = mid + <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        l = l==<span class=\"number\">0</span> ? <span class=\"number\">0</span> : l-<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> nd = <span class=\"built_in\">Math</span>.abs(sortedNums1[l] - num2);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (l + <span class=\"number\">1</span> &lt; nums1.length)   nd = <span class=\"built_in\">Math</span>.min(nd, <span class=\"built_in\">Math</span>.abs(sortedNums1[l+<span class=\"number\">1</span>] - num2));</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (nd &lt; abs) max = <span class=\"built_in\">Math</span>.max(max, abs - nd);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    sum-=max;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sum%(<span class=\"number\">10</span>**<span class=\"number\">9</span>+<span class=\"number\">7</span>);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p><img src=\"/2021/07/14/%E5%88%B7%E9%A2%98%E6%97%A5%E8%AE%B0/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98%EF%BC%9ALC1818%20%E7%BB%9D%E5%AF%B9%E5%B7%AE%E5%80%BC%E5%92%8C/C:%5CUsers%5CAndew%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210714144614044.png\" alt=\"image-20210714144614044\" class=\"φbs\"></p>\n<ol>\n<li>\n<p><strong>数组的深拷贝</strong></p>\n<p>一开始编写的时候：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> sortedNums1 = nums1.sort(<span class=\"function\">(<span class=\"params\">a,b</span>)=&gt;</span>a-b);</span><br><span class=\"line\"><span class=\"comment\">//或</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> sortedNums1 = nums1;</span><br><span class=\"line\">sortedNums1.sort(<span class=\"function\">(<span class=\"params\">a,b</span>)=&gt;</span>a-b);</span><br></pre></td></tr></table></figure>\n<p>实际上这样是不行的</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> nums = [<span class=\"number\">1</span>,<span class=\"number\">10</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">2</span>,<span class=\"number\">7</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> sortedNums = nums.sort(<span class=\"function\">(<span class=\"params\">a,b</span>)=&gt;</span>a-b);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(nums);       <span class=\"comment\">//[ 1, 2, 4, 4, 7, 10 ]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(sortedNums); <span class=\"comment\">//[ 1, 2, 4, 4, 7, 10 ]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> nums = [<span class=\"number\">1</span>,<span class=\"number\">10</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">2</span>,<span class=\"number\">7</span>];</span><br><span class=\"line\"><span class=\"keyword\">let</span> sortedNums = nums;</span><br><span class=\"line\">sortedNums.sort(<span class=\"function\">(<span class=\"params\">a,b</span>)=&gt;</span>a-b);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(nums);       <span class=\"comment\">//[ 1, 2, 4, 4, 7, 10 ]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(sortedNums); <span class=\"comment\">//[ 1, 2, 4, 4, 7, 10 ]</span></span><br></pre></td></tr></table></figure>\n<p>应该是因为JavaScript中的数组作为引用类型，nums和sortedNums实际上是指向同一块内存空间的。</p>\n<p><strong>因此如果想要实现数组的分开拷贝，要这样操作：</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> sortedNums1 = [...nums1].sort(<span class=\"function\">(<span class=\"params\">a,b</span>)=&gt;</span>a-b);</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>关于JavaScript中的null，undefined于NaN</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> nums = [<span class=\"number\">1</span>,<span class=\"number\">10</span>,<span class=\"number\">4</span>,<span class=\"number\">4</span>,<span class=\"number\">2</span>,<span class=\"number\">7</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(nums[-<span class=\"number\">1</span>], nums[<span class=\"number\">10</span>]); <span class=\"comment\">//undefined undefined</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> m = <span class=\"built_in\">Math</span>.min(nums[-<span class=\"number\">1</span>], <span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(m); <span class=\"comment\">//NaN</span></span><br></pre></td></tr></table></figure>\n<p>JavaScript中，数组越界是不会报错的，比如上面示例中返回的就是<code>undefined</code>。</p>\n<ul>\n<li>\n<p>undefined：用于存放JavaScript中未定义的值，表明变量声明过但未赋值</p>\n</li>\n<li>\n<p>NaN：非数值（Not a number），可以理解为一个不可以表达出来的数字</p>\n</li>\n</ul>\n<p>因此在JavaScript中编写二分的时候需要格外注意数组是否越界。</p>\n<p>在本题中，我希望能够编写一个二分查找法找到一个有序数组<code>nums</code>中与制定目标<code>target</code>最接近的值，即左边界与右边界，一开始我编写的代码如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> l = <span class=\"number\">0</span>, r = sortedNums1.length;</span><br><span class=\"line\"><span class=\"keyword\">while</span> (l &lt; r) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> mid = l+r&gt;&gt;<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (sortedNums1[mid] &gt;= num2) r = mid;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> l = mid + <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>此时的<code>l</code>有三种情况：</p>\n<ol>\n<li>当<code>nums</code>中存在与<code>target</code>等值的元素时，<code>l</code>就是与<code>target</code>相等的元素的下标；</li>\n<li>当<code>nums</code>中不存在与<code>target</code>等值的元素时：\n<ul>\n<li><code>target</code>小于<code>nums</code>中的最小元素<code>nums[0]</code>：返回<code>0</code></li>\n<li><code>target</code>大于<code>nums</code>中的最大元素<code>nums[nums.length-1]</code>：返回<code>nums.length</code></li>\n<li><code>target</code>夹在<code>nums[i]</code>与<code>nums[i+1]</code>：返回<code>i+1</code></li>\n</ul>\n</li>\n</ol>\n<p>此时我希望得到左边界，因此需要对<code>l</code>进行处理，根据上面的性质，情况1和情况2中的第二第三条可以直接返回<code>i-1</code>，但是对于情况2中的第一条需要重点注意，不能返回<code>i-1</code>会发生数组越界，因此需要把<code>l==0</code>的情况单独拿出来讨论，需要加上如下额外判断语句：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">l = l==<span class=\"number\">0</span> ? <span class=\"number\">0</span> : l-<span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure>\n<p>同时，<a href=\"https://leetcode-cn.com/u/ac_oier/\" target=\"_blank\">宫水三叶L6</a>所写的另一种二分形式可以稳定输出与target最接近的左边界元素，代码如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">while</span> (l &lt; r) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> mid = l + r + <span class=\"number\">1</span> &gt;&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (sorted[mid] &lt;= b) l = mid;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> r = mid - <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n","prev":{"title":"Floyd 判圈算法（Floyd Cycle Detection Algorithm）","link":"2021/07/16/算法/Floyd 判圈算法（Floyd Cycle Detection Algorithm）"},"next":{"title":"每日一题：LC218 天际线问题","link":"2021/07/13/刷题日记/每日一题：LC218 天际线问题"},"plink":"http://example.com/2021/07/14/刷题日记/每日一题：LC1818 绝对差值和/","toc":[{"id":"每日一题：lc1818-绝对差值和","title":"每日一题：LC1818 绝对差值和","index":"1"}]}