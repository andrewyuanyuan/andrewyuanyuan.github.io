{"title":"链表（Linked List）","date":"2021-03-24T16:00:00.000Z","date_formatted":{"ll":"Mar 25, 2021","L":"03/25/2021","MM-DD":"03-25"},"link":"2021/03/25/数据结构/链表（Linked List）","categories":["Data Structure"],"updated":"2021-04-01T06:53:08.821Z","content":"<h1 id=\"链表（linked-list）\">链表（Linked List）<a title=\"#链表（linked-list）\" href=\"#链表（linked-list）\"></a></h1>\n<p>本文主要来源：</p>\n<ol>\n<li><a href=\"https://leetcode-cn.com/leetbook/detail/linked-list/\" target=\"_blank\">LeetBook—链表</a></li>\n<li>作者ldq404于<a href=\"https://leetcode-cn.com/problems/design-linked-list/solution/shi-yong-javascript-shi-yong-shu-zu-huo-dui-xiang-/\" target=\"_blank\">leetcode的回答</a></li>\n</ol>\n<p>链表的题通常需要注意两点：</p>\n<ol>\n<li>舍得用变量，千万别想着节省变量，否则容易被逻辑绕晕；</li>\n<li><code>head</code>有可能需要改动时，先增加一个假<code>head</code>，返回的时候直接取假<code>head.next</code>，这样就不需要为修改<code>head</code>增加一大堆逻辑了。</li>\n</ol>\n<h2 id=\"链表中的双指针（快慢指针）\">链表中的双指针（快慢指针）<a title=\"#链表中的双指针（快慢指针）\" href=\"#链表中的双指针（快慢指针）\"></a></h2>\n<p>模板：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Initialize slow &amp; fast pointers</span></span><br><span class=\"line\">ListNode slow = head;</span><br><span class=\"line\">ListNode fast = head;</span><br><span class=\"line\"><span class=\"comment\">//注意在调用next字段前，始终检查节点是否为空</span></span><br><span class=\"line\"><span class=\"keyword\">while</span>(slow!=<span class=\"keyword\">null</span> &amp;&amp; fast!=<span class=\"keyword\">null</span> &amp;&amp; fast.next!==<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">    slow = slow.next;</span><br><span class=\"line\">    fast = fast.next.next;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(slow == fast)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br></pre></td></tr></table></figure>\n<p>典例：</p>\n<ol>\n<li>\n<p><a href=\"https://leetcode-cn.com/problems/linked-list-cycle/\" target=\"_blank\">#141 环形链表</a></p>\n</li>\n<li>\n<p><a href=\"https://leetcode-cn.com/problems/intersection-of-two-linked-lists/\" target=\"_blank\">#160 相交链表</a></p>\n</li>\n<li>\n<p><a href=\"https://leetcode-cn.com/problems/remove-nth-node-from-end-of-list/\" target=\"_blank\">#19 删除链表的倒数第 N 个结点</a></p>\n</li>\n<li>\n<p><a href=\"https://leetcode-cn.com/problems/palindrome-linked-list/\" target=\"_blank\">234. 回文链表</a></p>\n</li>\n</ol>\n<h2 id=\"链表数据结构设计\">链表数据结构设计<a title=\"#链表数据结构设计\" href=\"#链表数据结构设计\"></a></h2>\n<h2 id=\"javascript\">JavaScript<a title=\"#javascript\" href=\"#javascript\"></a></h2>\n<p>JavaScript通过下面的形式模拟链表</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 假设链表为 5 -&gt; 3 &gt; 1</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  val: <span class=\"number\">5</span>,</span><br><span class=\"line\">  next: &#123;</span><br><span class=\"line\">    val: <span class=\"number\">3</span>,</span><br><span class=\"line\">    next: &#123;</span><br><span class=\"line\">      val: <span class=\"number\">1</span>,</span><br><span class=\"line\">      next: <span class=\"literal\">null</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 双链表的结构就会多一个prev</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyLinkedList</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"title\">constructor</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.data = &#123;&#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">get</span>(<span class=\"params\">index</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (index &lt; <span class=\"number\">0</span>) <span class=\"keyword\">return</span> -<span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> curr = <span class=\"built_in\">this</span>.data</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; index; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!curr.next) <span class=\"keyword\">return</span> -<span class=\"number\">1</span></span><br><span class=\"line\">      curr = curr.next</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(curr.val)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> curr.val === <span class=\"literal\">undefined</span> || curr.val === <span class=\"literal\">null</span> ? -<span class=\"number\">1</span> : curr.val</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">addAtHead</span>(<span class=\"params\">val</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"built_in\">this</span>.data &amp;&amp; !(<span class=\"built_in\">this</span>.data.val === <span class=\"literal\">undefined</span> || <span class=\"built_in\">this</span>.data.val === <span class=\"literal\">null</span>)) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.data = &#123; val, <span class=\"attr\">next</span>: <span class=\"built_in\">this</span>.data &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">this</span>.data = &#123; val, <span class=\"attr\">next</span>: <span class=\"literal\">null</span> &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">addAtTail</span>(<span class=\"params\">val</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> curr = <span class=\"built_in\">this</span>.data</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (curr.next) &#123;</span><br><span class=\"line\">      curr = curr.next</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    curr.next = &#123; val, <span class=\"attr\">next</span>: <span class=\"literal\">null</span> &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">addAtIndex</span>(<span class=\"params\">index, val</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (index &lt;= <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.addAtHead(val)</span><br><span class=\"line\">    <span class=\"keyword\">let</span> curr = <span class=\"built_in\">this</span>.data</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; index - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!curr || !curr.next) <span class=\"keyword\">return</span> <span class=\"literal\">null</span></span><br><span class=\"line\">      curr = curr.next</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!curr.val &amp;&amp; curr.val !== <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"literal\">null</span></span><br><span class=\"line\">    curr.next = &#123; val, <span class=\"attr\">next</span>: curr.next &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">deleteAtIndex</span>(<span class=\"params\">index</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (index &lt; <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"literal\">null</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (index === <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"built_in\">this</span>.data = <span class=\"built_in\">this</span>.data.next</span><br><span class=\"line\">    <span class=\"keyword\">let</span> curr = <span class=\"built_in\">this</span>.data</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; index - <span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!curr.next || !curr.next.next) <span class=\"keyword\">return</span> <span class=\"literal\">null</span></span><br><span class=\"line\">      curr = curr.next</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"built_in\">JSON</span>.stringify(curr))</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!curr.next) <span class=\"keyword\">return</span> <span class=\"literal\">null</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!curr.next.next) <span class=\"keyword\">return</span> curr.next = <span class=\"literal\">null</span></span><br><span class=\"line\">    curr.next = curr.next.next</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"java\">Java<a title=\"#java\" href=\"#java\"></a></h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ListNode</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> val;</span><br><span class=\"line\">    ListNode next;</span><br><span class=\"line\">    ListNode(<span class=\"keyword\">int</span> x)&#123;</span><br><span class=\"line\">        val = x;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyLinkedList</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> size;</span><br><span class=\"line\">    ListNode head;<span class=\"comment\">//哨兵节点</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MyLinkedList</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        size = <span class=\"number\">0</span>;</span><br><span class=\"line\">        head = <span class=\"keyword\">new</span> ListNode(<span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">get</span><span class=\"params\">(<span class=\"keyword\">int</span> index)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(index&lt;<span class=\"number\">0</span> || index&gt;=size)  <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">        ListNode curr = head;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;index+<span class=\"number\">1</span>; ++i)    curr = curr.next;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> curr.val;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addAtHead</span><span class=\"params\">(<span class=\"keyword\">int</span> val)</span></span>&#123;</span><br><span class=\"line\">        addAtIndex(<span class=\"number\">0</span>,val);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addAtTail</span><span class=\"params\">(<span class=\"keyword\">int</span> val)</span></span>&#123;</span><br><span class=\"line\">        addAtIndex(size, val);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addAtIndex</span><span class=\"params\">(<span class=\"keyword\">int</span> index, <span class=\"keyword\">int</span> val)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(index&gt;size)  <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(index&lt;<span class=\"number\">0</span>) index = <span class=\"number\">0</span>;</span><br><span class=\"line\">        ++size;</span><br><span class=\"line\">        ListNode pred = head;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;index; i++)  pred = pred.next;</span><br><span class=\"line\">        ListNode toAdd = <span class=\"keyword\">new</span> ListNode(val);</span><br><span class=\"line\">        toAdd.next = pred.next;</span><br><span class=\"line\">        pred.next = toAdd;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">deleteAtIndex</span><span class=\"params\">(<span class=\"keyword\">int</span> index)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (index &lt; <span class=\"number\">0</span> || index &gt;= size) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        size--;</span><br><span class=\"line\">        ListNode pred = head;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; index; ++i) pred = pred.next;</span><br><span class=\"line\">        pred.next = pred.next.next;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"双链表\">双链表<a title=\"#双链表\" href=\"#双链表\"></a></h3>\n<ul>\n<li>技巧：在<code>addAtIndex</code>和<code>deleteAtIndex</code>中，可以通过判断index离表头近还是表尾近来选择从哪里出发，可以节省一些时间。注意：<strong>如果要使用这个方法，要格外注意循环终止判断条件</strong>。</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ListNode</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> val;</span><br><span class=\"line\">    ListNode next;</span><br><span class=\"line\">    ListNode prev;</span><br><span class=\"line\">    ListNode(<span class=\"keyword\">int</span> x)&#123;</span><br><span class=\"line\">        val = x;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MyLinkedList</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> size;</span><br><span class=\"line\">    ListNode head, tail;<span class=\"comment\">//哨兵节点</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MyLinkedList</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        size = <span class=\"number\">0</span>;</span><br><span class=\"line\">        head = <span class=\"keyword\">new</span> ListNode(<span class=\"number\">0</span>);</span><br><span class=\"line\">        tail = <span class=\"keyword\">new</span> ListNode(<span class=\"number\">0</span>);</span><br><span class=\"line\">        head.next = tail;</span><br><span class=\"line\">        tail.prev = head;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">get</span><span class=\"params\">(<span class=\"keyword\">int</span> index)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(index&lt;<span class=\"number\">0</span>||index&gt;=size) <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">        ListNode curr = head;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(index+<span class=\"number\">1</span>&lt;size-index)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;index+<span class=\"number\">1</span>; ++i)    curr = curr.next;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            curr = tail;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;size-index; ++i) curr = curr.prev;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> curr.val;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addAtHead</span><span class=\"params\">(<span class=\"keyword\">int</span> val)</span></span>&#123;</span><br><span class=\"line\">        ListNode pred = head, succ = head.next;</span><br><span class=\"line\">        ++size;</span><br><span class=\"line\">        ListNode toAdd = <span class=\"keyword\">new</span> ListNode(val);</span><br><span class=\"line\">        toAdd.prev = pred;</span><br><span class=\"line\">        toAdd.next = succ;</span><br><span class=\"line\">        pred.next = toAdd;</span><br><span class=\"line\">        succ.prev = toAdd;</span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addAtTail</span><span class=\"params\">(<span class=\"keyword\">int</span> val)</span></span>&#123;</span><br><span class=\"line\">        ++size;</span><br><span class=\"line\">        ListNode succ = tail, pred = tail.prev;</span><br><span class=\"line\">        ListNode toAdd = <span class=\"keyword\">new</span> ListNode(val);</span><br><span class=\"line\">        toAdd.next = succ;  </span><br><span class=\"line\">        toAdd.prev = pred;</span><br><span class=\"line\">        pred.next = toAdd;</span><br><span class=\"line\">        succ.prev = toAdd;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addAtIndex</span><span class=\"params\">(<span class=\"keyword\">int</span> index, <span class=\"keyword\">int</span> val)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(index&gt;size)  <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(index&lt;<span class=\"number\">0</span>) index = <span class=\"number\">0</span>;</span><br><span class=\"line\">        ListNode toAdd = <span class=\"keyword\">new</span> ListNode(val);</span><br><span class=\"line\">        ListNode pred, succ;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(index&lt;size-index)&#123;</span><br><span class=\"line\">            pred = head;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;index; i++)  pred = pred.next;</span><br><span class=\"line\">            succ = pred.next;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            succ = tail;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;size-index; i++) succ = succ.prev;</span><br><span class=\"line\">            pred = succ.prev;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        size++;</span><br><span class=\"line\">        toAdd.next = succ;  </span><br><span class=\"line\">        toAdd.prev = pred;</span><br><span class=\"line\">        pred.next = toAdd;</span><br><span class=\"line\">        succ.prev = toAdd;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">deleteAtIndex</span><span class=\"params\">(<span class=\"keyword\">int</span> index)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(index&lt;<span class=\"number\">0</span>||index&gt;=size)    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        ListNode pred, succ;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(index&lt;size-index)&#123;</span><br><span class=\"line\">            pred = head;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;index; i++)  pred = pred.next;</span><br><span class=\"line\">            succ = pred.next.next;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            succ = tail;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>; i&lt;size-index-<span class=\"number\">1</span>; i++) succ = succ.prev;</span><br><span class=\"line\">            pred = succ.prev.prev;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        --size;</span><br><span class=\"line\">        pred.next = succ;</span><br><span class=\"line\">        succ.prev = pred;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","prev":{"title":"每日一题：LC21 合并两个有序链表","link":"2021/03/26/刷题日记/每日一题：LC21 合并两个有序链表"},"next":{"title":"每日一题：LC82 删除排序链表中的重复元素Ⅱ阵","link":"2021/03/25/刷题日记/每日一题：LC82 删除排序链表中的重复元素Ⅱ"},"plink":"http://example.com/2021/03/25/数据结构/链表（Linked List）/","toc":[{"id":"链表（linked-list）","title":"链表（Linked List）","index":"1","children":[{"id":"链表中的双指针（快慢指针）","title":"链表中的双指针（快慢指针）","index":"1.1"},{"id":"链表数据结构设计","title":"链表数据结构设计","index":"1.2"},{"id":"javascript","title":"JavaScript","index":"1.3","children":[{"id":"java","title":"Java","index":"1.3.1"},{"id":"双链表","title":"双链表","index":"1.3.2"}]}]}]}