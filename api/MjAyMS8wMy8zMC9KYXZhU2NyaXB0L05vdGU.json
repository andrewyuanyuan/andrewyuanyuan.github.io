{"title":"note","date":"2021-03-29T16:00:00.000Z","date_formatted":{"ll":"Mar 30, 2021","L":"03/30/2021","MM-DD":"03-30"},"link":"2021/03/30/JavaScript/Note","tags":["JavaScript"],"categories":["JS Technique"],"updated":"2021-05-02T09:04:54.923Z","content":"<h1 id=\"note\">Note<a title=\"#note\" href=\"#note\"></a></h1>\n<ul>\n<li>\n<p><code>undefined</code>与<code>null</code>的区别：</p>\n<ol>\n<li>JavaScript高级编程指南 <strong>P30-33</strong></li>\n<li><a href=\"http://www.ruanyifeng.com/blog/2014/03/undefined-vs-null.html\" target=\"_blank\">阮一峰的网络日志</a></li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"literal\">null</span> || <span class=\"literal\">undefined</span>);<span class=\"comment\">//undefined</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"literal\">undefined</span> || <span class=\"literal\">null</span>);<span class=\"comment\">//null</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>关于<code>for-of</code>和<code>for-in</code></p>\n<ul>\n<li>\n<p><code>for-in</code><strong>用于枚举对象中的非符号属性</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Object</span>.prototype.method=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">　　<span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> myObject=&#123;</span><br><span class=\"line\">　　a:<span class=\"number\">1</span>, <span class=\"attr\">b</span>:<span class=\"number\">2</span>, <span class=\"attr\">c</span>:<span class=\"number\">3</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> key <span class=\"keyword\">in</span> myObject) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(key);</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"comment\">// method a b c</span></span><br></pre></td></tr></table></figure>\n<p><code>for-in</code>可以遍历到<code>myObject</code>的原型方法<code>method</code>，如果不想遍历原型方法和属性的话，可以在循环内部使用<code>hasOwnProperty()</code>方法判断某属性是否是该对象的实例属性。</p>\n<p>同样可可以使用ES5的<code>Object.keys(myObject)</code>获取对象的实例属性组成的数组，不包括原型方法和属性。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Object</span>.prototype.method=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">　　<span class=\"built_in\">console</span>.log(<span class=\"built_in\">this</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> myObject=&#123;</span><br><span class=\"line\">　　a:<span class=\"number\">1</span>, <span class=\"attr\">b</span>:<span class=\"number\">2</span>, <span class=\"attr\">c</span>:<span class=\"number\">3</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"built_in\">Object</span>.keys(myObject)); <span class=\"comment\">//[ &#x27;a&#x27;, &#x27;b&#x27;, &#x27;c&#x27; ]</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><code>for-of</code>适用于遍历 数字对象、字符串、<code>map</code>、<code>set</code> 等拥有迭代器对象的集合，但是不能遍历对象，因为对象没有迭代器对象。</p>\n<p>使用<code>for-of</code>遍历<code>map</code>对象时适合用解构，例如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> [key, value] <span class=\"keyword\">of</span> phoneBookMap) &#123;</span><br><span class=\"line\">   <span class=\"built_in\">console</span>.log(key + <span class=\"string\">&quot;&#x27;s phone number is: &quot;</span> + value);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n","prev":{"title":"回溯算法（Backtracking Algorithm）","link":"2021/03/31/算法/回溯算法（Backtracking Algorithm）"},"next":{"title":"每日一题：LC430 扁平化多级双向链表（待理解）","link":"2021/03/30/刷题日记/每日一题：LC430 扁平化多级双向链表"},"plink":"http://example.com/2021/03/30/JavaScript/Note/","toc":[{"id":"note","title":"Note","index":"1"}]}