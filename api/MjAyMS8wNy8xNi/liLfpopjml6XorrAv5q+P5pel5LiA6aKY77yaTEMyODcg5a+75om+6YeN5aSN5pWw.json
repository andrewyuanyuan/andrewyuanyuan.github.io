{"title":"每日一题：LC287 寻找重复数","date":"2021-07-15T16:00:00.000Z","date_formatted":{"ll":"Jul 16, 2021","L":"07/16/2021","MM-DD":"07-16"},"link":"2021/07/16/刷题日记/每日一题：LC287 寻找重复数","tags":["Floyd 判圈算法","LeetCode","二分查找","快慢指针"],"categories":["LeetCode"],"updated":"2021-07-16T07:37:21.672Z","content":"<h1 id=\"每日一题：lc287-寻找重复数\">每日一题：LC287 寻找重复数<a title=\"#每日一题：lc287-寻找重复数\" href=\"#每日一题：lc287-寻找重复数\"></a></h1>\n<p><a href=\"https://leetcode-cn.com/problems/find-the-duplicate-number/\" target=\"_blank\">287. 寻找重复数</a>-Medium</p>\n<p>本文内容参考：</p>\n<ol>\n<li>作者liweiwei1419于<a href=\"https://leetcode-cn.com/problems/find-the-duplicate-number/solution/er-fen-fa-si-lu-ji-dai-ma-python-by-liweiwei1419/\" target=\"_blank\">LeetCode的解答</a></li>\n<li>leetCode<a href=\"https://leetcode-cn.com/problems/find-the-duplicate-number/solution/xun-zhao-zhong-fu-shu-by-leetcode-solution/\" target=\"_blank\">官方题解</a></li>\n<li>作者zjczxz于<a href=\"https://leetcode-cn.com/problems/find-the-duplicate-number/solution/kuai-man-zhi-zhen-de-jie-shi-cong-damien_undoxie-d/\" target=\"_blank\">LeetCode的解答</a></li>\n</ol>\n<hr>\n<h2 id=\"二分查找\">二分查找<a title=\"#二分查找\" href=\"#二分查找\"></a></h2>\n<blockquote>\n<p>抽屉原理：桌上有十个苹果，要把这十个苹果放入九个抽屉内，无论怎么放，我们至少会发现有一个抽屉里面放不少于两个苹果。</p>\n</blockquote>\n<p>我们先来考虑这个示例数组：<code>[1,3,4,2,2]</code></p>\n<p>我们假设<code>cnt</code>为小于等于<code>cnt</code>的元素个数，列出如下表格：</p>\n<div class=\"φbt\"><div class=\"φbv\"><table><thead>\n<tr>\n<th>1</th>\n<th>2</th>\n<th>3</th>\n<th>4</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>3</td>\n<td>4</td>\n<td>5</td>\n</tr>\n</tbody>\n</table></div></div><p>可以发现，加入元素<code>target</code>重复了，那么<code>[1,target-1]</code>对应的所有<code>cnt</code>都满足<code>cnt&lt;=target</code>，而从重复的元素<code>target</code>开始，所有的<code>cnt</code>都满足<code>cnt&gt;target</code>。</p>\n<p>想到这一句话—“<strong>二分的本质是两段性</strong>”，很明显<code>cnt</code>是可以作为分界点的，所以：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> findDuplicate = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> n = nums.length;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> l = <span class=\"number\">1</span>, r = n-<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(l&lt;r)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> cnt = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> mid = <span class=\"built_in\">Math</span>.floor(l+(r-l)/<span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(ele <span class=\"keyword\">of</span> nums)\tcnt += ele&lt;=mid;</span><br><span class=\"line\">     </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(cnt&lt;=mid)\tl = mid+<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span>\tr = mid;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> l;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>时间复杂度：O(nlogn)</li>\n<li>空间复杂度：O(1)</li>\n</ul>\n<h2 id=\"快慢指针（精妙）\">快慢指针（精妙）<a title=\"#快慢指针（精妙）\" href=\"#快慢指针（精妙）\"></a></h2>\n<p>参考：<a href=\"https://leetcode-cn.com/problems/linked-list-cycle/\" target=\"_blank\">141. 环形链表</a>、<a href=\"https://leetcode-cn.com/problems/linked-list-cycle-ii/solution/huan-xing-lian-biao-ii-by-leetcode/\" target=\"_blank\">142. 环形链表 II</a></p>\n<p>使用快慢指针，把题目中所给的特殊数组当作一个链表来看，数组的下标就是指向元素的指针，把数组的元素也看做指针。如，<code>0</code>是指针，而<code>nums[0]</code>也是指针，指向<code>nums[nums[0]]</code>。</p>\n<p>按照这样的定义，如果数组为<code>[1,3,4,2,2]</code>，那么遍历的顺序就是<code>1, 3, 2, 4, 2, 4, 2, 4, 2, 4, ...</code></p>\n<p>如果数组为<code>[1,2,3,4,5,6,7,8,9,5]</code>，那么遍历结果就是<code>1, 2, 3, 4, 5, 6, 7, 8, 9, 6, 7, 8, 9,...</code></p>\n<p>已知数组一定成环，我们假设：</p>\n<ul>\n<li>从起点到环的入口长度为<code>m</code></li>\n<li>环的周长为<code>c</code></li>\n<li>当<code>fast</code>与<code>slow</code>相遇时<code>slow</code>走了<code>n</code>步，则<code>fast</code>走了<code>2n</code>步，此时<code>fast</code>比<code>slow</code>多走了<code>n</code>步，这<code>n</code>步全部用于在环内循环（即<code>n%c==0</code>）。</li>\n</ul>\n<p>当<code>fast</code>与<code>slow</code>相遇后，我们设置第三个指针<code>finder</code>，它从起点开始和<code>slow</code>（此时<code>slow</code>在<code>slow</code>与<code>fast</code>相遇处）同步前进，当<code>finder</code>和<code>slow</code>相遇时，一定会在环的入口处相遇，即那个重复的数字。</p>\n<h3 id=\"为什么finder和slow一定相遇在入口？\">为什么<code>finder</code>和<code>slow</code>一定相遇在入口？<a title=\"#为什么finder和slow一定相遇在入口？\" href=\"#为什么finder和slow一定相遇在入口？\"></a></h3>\n<p>当<code>fast</code>与<code>slow</code>相遇时，<code>slow</code>在环内走了<code>n-m</code>步，此时我们定义了<code>finder</code>，<code>finder</code>位于起点，走了0步。</p>\n<p>我们已知<code>n%c==0</code>，那么让<code>slow</code>和<code>finder</code>同步走，则当它们两个都走了<code>m</code>步的时候，此时<code>slow</code>在环内走了<code>n</code>步，因为<code>n%c==0</code>，所以此时<code>slow</code>一定在环的入口；而对于<code>finder</code>，因为起点到环的入口的距离就是<code>m</code>，所以<code>finder</code>此时也一定在环的入口位置。因此<code>finder</code>和<code>slow</code>一定相遇在入口。</p>\n<hr>\n<p>代码实践如下：</p>\n<p><strong>这也是Floyd 判圈算法代码的实践方式</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> findDuplicate = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">nums</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> slow = <span class=\"number\">0</span>, fast = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">        slow = nums[slow];</span><br><span class=\"line\">        fast = nums[nums[fast]];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(slow==fast)  <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> finder = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"literal\">true</span>)&#123;</span><br><span class=\"line\">        slow = nums[slow];</span><br><span class=\"line\">        finder = nums[finder];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(finder == slow)  <span class=\"keyword\">return</span> slow;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>时间复杂度：O(n)</li>\n<li>空间复杂度：O(1)</li>\n</ul>\n","prev":{"title":"每日一题：LC1838 最高频元素的频数","link":"2021/07/19/刷题日记/每日一题：LC1838 最高频元素的频数"},"next":{"title":"Floyd 判圈算法（Floyd Cycle Detection Algorithm）","link":"2021/07/16/算法/Floyd 判圈算法（Floyd Cycle Detection Algorithm）"},"plink":"http://example.com/2021/07/16/刷题日记/每日一题：LC287 寻找重复数/","toc":[{"id":"每日一题：lc287-寻找重复数","title":"每日一题：LC287 寻找重复数","index":"1","children":[{"id":"二分查找","title":"二分查找","index":"1.1"},{"id":"快慢指针（精妙）","title":"快慢指针（精妙）","index":"1.2","children":[{"id":"为什么finder和slow一定相遇在入口？","title":"为什么finder和slow一定相遇在入口？","index":"1.2.1"}]}]}]}